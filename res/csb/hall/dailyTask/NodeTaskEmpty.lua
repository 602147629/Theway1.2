--------------------------------------------------------------
-- This file was automatically generated by Cocos Studio.
-- Do not make changes to this file.
-- All changes will be lost.
--------------------------------------------------------------

local luaExtend = require "LuaExtend"

-- using for layout to decrease count of local variables
local layout = nil
local localLuaFile = nil
local innerCSD = nil
local innerProject = nil
local localFrame = nil

local Result = {}
------------------------------------------------------------
-- function call description
-- create function caller should provide a function to 
-- get a callback function in creating scene process.
-- the returned callback function will be registered to 
-- the callback event of the control.
-- the function provider is as below :
-- Callback callBackProvider(luaFileName, node, callbackName)
-- parameter description:
-- luaFileName  : a string, lua file name
-- node         : a Node, event source
-- callbackName : a string, callback function name
-- the return value is a callback function
------------------------------------------------------------
function Result.create(callBackProvider)

local result={}
setmetatable(result, luaExtend)

--Create Node
local Node=cc.Node:create()
Node:setName("Node")

--Create Image_mm
local Image_mm = ccui.ImageView:create()
Image_mm:ignoreContentAdaptWithSize(false)
cc.SpriteFrameCache:getInstance():addSpriteFrames("hall/common/hall_common.plist")
Image_mm:loadTexture("store_mm.png",1)
Image_mm:setLayoutComponentEnabled(true)
Image_mm:setName("Image_mm")
Image_mm:setTag(21)
Image_mm:setCascadeColorEnabled(true)
Image_mm:setCascadeOpacityEnabled(true)
Image_mm:setPosition(-13.4664, 113.1463)
layout = ccui.LayoutComponent:bindLayoutComponent(Image_mm)
layout:setSize({width = 480.0000, height = 409.0000})
layout:setLeftMargin(-253.4664)
layout:setRightMargin(-226.5336)
layout:setTopMargin(-317.6463)
layout:setBottomMargin(-91.3537)
Node:addChild(Image_mm)

--Create Image_text
local Image_text = ccui.ImageView:create()
Image_text:ignoreContentAdaptWithSize(false)
cc.SpriteFrameCache:getInstance():addSpriteFrames("hall/dailyTask/dailyTask_plist.plist")
Image_text:loadTexture("dailyTask_empty_text.png",1)
Image_text:setLayoutComponentEnabled(true)
Image_text:setName("Image_text")
Image_text:setTag(22)
Image_text:setCascadeColorEnabled(true)
Image_text:setCascadeOpacityEnabled(true)
Image_text:setPosition(0.0000, -134.6951)
layout = ccui.LayoutComponent:bindLayoutComponent(Image_text)
layout:setSize({width = 415.0000, height = 54.0000})
layout:setLeftMargin(-207.5000)
layout:setRightMargin(-207.5000)
layout:setTopMargin(107.6951)
layout:setBottomMargin(-161.6951)
Node:addChild(Image_text)

--Create Animation
result['animation'] = ccs.ActionTimeline:create()
  
result['animation']:setDuration(0)
result['animation']:setTimeSpeed(1.0000)
--Create Animation List

result['root'] = Node
return result;
end

return Result

