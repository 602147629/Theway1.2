--------------------------------------------------------------
-- This file was automatically generated by Cocos Studio.
-- Do not make changes to this file.
-- All changes will be lost.
--------------------------------------------------------------

local luaExtend = require "LuaExtend"

-- using for layout to decrease count of local variables
local layout = nil
local localLuaFile = nil
local innerCSD = nil
local innerProject = nil
local localFrame = nil

local Result = {}
------------------------------------------------------------
-- function call description
-- create function caller should provide a function to 
-- get a callback function in creating scene process.
-- the returned callback function will be registered to 
-- the callback event of the control.
-- the function provider is as below :
-- Callback callBackProvider(luaFileName, node, callbackName)
-- parameter description:
-- luaFileName  : a string, lua file name
-- node         : a Node, event source
-- callbackName : a string, callback function name
-- the return value is a callback function
------------------------------------------------------------
function Result.create(callBackProvider)

local result={}
setmetatable(result, luaExtend)

--Create Node
local Node=cc.Node:create()
Node:setName("Node")

--Create Panel_bg
local Panel_bg = ccui.Layout:create()
Panel_bg:ignoreContentAdaptWithSize(false)
Panel_bg:setClippingEnabled(false)
Panel_bg:setBackGroundColorType(1)
Panel_bg:setBackGroundColor({r = 150, g = 200, b = 255})
Panel_bg:setBackGroundColorOpacity(0)
Panel_bg:setLayoutComponentEnabled(true)
Panel_bg:setName("Panel_bg")
Panel_bg:setTag(40)
Panel_bg:setCascadeColorEnabled(true)
Panel_bg:setCascadeOpacityEnabled(true)
Panel_bg:setAnchorPoint(0.5000, 0.5000)
Panel_bg:setPosition(-3.9131, -0.2800)
layout = ccui.LayoutComponent:bindLayoutComponent(Panel_bg)
layout:setSize({width = 1920.0000, height = 180.0000})
layout:setLeftMargin(-963.9131)
layout:setRightMargin(-956.0869)
layout:setTopMargin(-89.7200)
layout:setBottomMargin(-90.2800)
Node:addChild(Panel_bg)

--Create Button_back
local Button_back = ccui.Button:create()
Button_back:ignoreContentAdaptWithSize(false)
Button_back:loadTextureNormal("common/common_btn_back_1.png",0)
Button_back:setTitleFontSize(14)
Button_back:setTitleColor({r = 65, g = 65, b = 70})
Button_back:setScale9Enabled(true)
Button_back:setCapInsets({x = 15, y = 11, width = 61, height = 69})
Button_back:setLayoutComponentEnabled(true)
Button_back:setName("Button_back")
Button_back:setTag(41)
Button_back:setCascadeColorEnabled(true)
Button_back:setCascadeOpacityEnabled(true)
Button_back:setPosition(56.2866, 126.6573)
layout = ccui.LayoutComponent:bindLayoutComponent(Button_back)
layout:setPositionPercentX(0.0293)
layout:setPositionPercentY(0.7037)
layout:setPercentWidth(0.0474)
layout:setPercentHeight(0.5056)
layout:setSize({width = 91.0000, height = 91.0000})
layout:setVerticalEdge(2)
layout:setLeftMargin(10.7866)
layout:setRightMargin(1818.2130)
layout:setTopMargin(7.8427)
layout:setBottomMargin(81.1573)
Panel_bg:addChild(Button_back)

--Create Image_header
local Image_header = ccui.ImageView:create()
Image_header:ignoreContentAdaptWithSize(false)
cc.SpriteFrameCache:getInstance():addSpriteFrames("hall/plist/halltop.plist")
Image_header:loadTexture("hall_title_bg.png",1)
Image_header:setLayoutComponentEnabled(true)
Image_header:setName("Image_header")
Image_header:setTag(42)
Image_header:setCascadeColorEnabled(true)
Image_header:setCascadeOpacityEnabled(true)
Image_header:setPosition(960.0000, 120.5674)
layout = ccui.LayoutComponent:bindLayoutComponent(Image_header)
layout:setPositionPercentX(0.5000)
layout:setPositionPercentY(0.6698)
layout:setPercentWidth(0.3271)
layout:setPercentHeight(0.6667)
layout:setSize({width = 628.0000, height = 120.0000})
layout:setVerticalEdge(2)
layout:setLeftMargin(646.0000)
layout:setRightMargin(646.0000)
layout:setTopMargin(-0.5674)
layout:setBottomMargin(60.5674)
Panel_bg:addChild(Image_header)

--Create Image_title
local Image_title = ccui.ImageView:create()
Image_title:ignoreContentAdaptWithSize(false)
Image_title:loadTexture("hall/choose/chooserm_top_title1.png",0)
Image_title:setLayoutComponentEnabled(true)
Image_title:setName("Image_title")
Image_title:setTag(43)
Image_title:setCascadeColorEnabled(true)
Image_title:setCascadeOpacityEnabled(true)
Image_title:setPosition(314.0000, 65.0000)
layout = ccui.LayoutComponent:bindLayoutComponent(Image_title)
layout:setPositionPercentX(0.5000)
layout:setPositionPercentY(0.5417)
layout:setPercentWidth(0.3360)
layout:setPercentHeight(0.6333)
layout:setSize({width = 211.0000, height = 76.0000})
layout:setLeftMargin(208.5000)
layout:setRightMargin(208.5000)
layout:setTopMargin(17.0000)
layout:setBottomMargin(27.0000)
Image_header:addChild(Image_title)

--Create FileNode_fStart
innerCSD = require("csb.hall.content.Node_leftTopBtn")
innerProject = innerCSD.create(callBackProvider)
local FileNode_fStart = innerProject.root
FileNode_fStart.animation = innerProject.animation
FileNode_fStart:setName("FileNode_fStart")
FileNode_fStart:setTag(49)
FileNode_fStart:setCascadeColorEnabled(true)
FileNode_fStart:setCascadeOpacityEnabled(true)
FileNode_fStart:setPosition(1812.3900, 72.6800)
layout = ccui.LayoutComponent:bindLayoutComponent(FileNode_fStart)
layout:setPositionPercentX(0.9440)
layout:setPositionPercentY(0.4038)
layout:setLeftMargin(1812.3900)
layout:setRightMargin(107.6100)
layout:setTopMargin(107.3200)
layout:setBottomMargin(72.6800)
innerProject.animation:setTimeSpeed(0.4000)
FileNode_fStart:runAction(innerProject.animation)
Panel_bg:addChild(FileNode_fStart)

--Create Animation
result['animation'] = ccs.ActionTimeline:create()
  
result['animation']:setDuration(0)
result['animation']:setTimeSpeed(0.4000)
--Create Animation List

result['root'] = Node
return result;
end

return Result

