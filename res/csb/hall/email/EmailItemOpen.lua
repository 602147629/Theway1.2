--------------------------------------------------------------
-- This file was automatically generated by Cocos Studio.
-- Do not make changes to this file.
-- All changes will be lost.
--------------------------------------------------------------

local luaExtend = require "LuaExtend"

-- using for layout to decrease count of local variables
local layout = nil
local localLuaFile = nil
local innerCSD = nil
local innerProject = nil
local localFrame = nil

local Result = {}
------------------------------------------------------------
-- function call description
-- create function caller should provide a function to 
-- get a callback function in creating scene process.
-- the returned callback function will be registered to 
-- the callback event of the control.
-- the function provider is as below :
-- Callback callBackProvider(luaFileName, node, callbackName)
-- parameter description:
-- luaFileName  : a string, lua file name
-- node         : a Node, event source
-- callbackName : a string, callback function name
-- the return value is a callback function
------------------------------------------------------------
function Result.create(callBackProvider)

local result={}
setmetatable(result, luaExtend)

--Create Node
local Node=cc.Node:create()
Node:setName("Node")

--Create ImageD
local ImageD = ccui.ImageView:create()
ImageD:ignoreContentAdaptWithSize(false)
cc.SpriteFrameCache:getInstance():addSpriteFrames("hall/email/email_plist.plist")
ImageD:loadTexture("email_message.png",1)
ImageD:setScale9Enabled(true)
ImageD:setCapInsets({x = 220, y = 15, width = 1, height = 67})
ImageD:setTouchEnabled(true);
ImageD:setLayoutComponentEnabled(true)
ImageD:setName("ImageD")
ImageD:setTag(116)
ImageD:setCascadeColorEnabled(true)
ImageD:setCascadeOpacityEnabled(true)
ImageD:setAnchorPoint(0.5000, 1.0000)
ImageD:setPosition(0.0001, 1.5012)
layout = ccui.LayoutComponent:bindLayoutComponent(ImageD)
layout:setSize({width = 952.0000, height = 140.0000})
layout:setLeftMargin(-475.9999)
layout:setRightMargin(-476.0001)
layout:setTopMargin(-1.5012)
layout:setBottomMargin(-138.4988)
Node:addChild(ImageD)

--Create Image_icon
local Image_icon = ccui.ImageView:create()
Image_icon:ignoreContentAdaptWithSize(false)
cc.SpriteFrameCache:getInstance():addSpriteFrames("hall/email/email_plist.plist")
Image_icon:loadTexture("email_envelopeOpen.png",1)
Image_icon:setLayoutComponentEnabled(true)
Image_icon:setName("Image_icon")
Image_icon:setTag(117)
Image_icon:setCascadeColorEnabled(true)
Image_icon:setCascadeOpacityEnabled(true)
Image_icon:setAnchorPoint(0.0000, 1.0000)
Image_icon:setPosition(10.0000, 125.9998)
layout = ccui.LayoutComponent:bindLayoutComponent(Image_icon)
layout:setPositionPercentX(0.0105)
layout:setPositionPercentY(0.9000)
layout:setPercentWidth(0.1261)
layout:setPercentHeight(0.8571)
layout:setSize({width = 120.0000, height = 120.0000})
layout:setLeftMargin(10.0000)
layout:setRightMargin(822.0000)
layout:setTopMargin(14.0002)
layout:setBottomMargin(5.9998)
ImageD:addChild(Image_icon)

--Create title
local title = ccui.Text:create()
title:ignoreContentAdaptWithSize(true)
title:setTextAreaSize({width = 0, height = 0})
title:setFontName("FZZhengHeiS-B-GB.ttf")
title:setFontSize(42)
title:setString([[新版本上线啦！]])
title:setLayoutComponentEnabled(true)
title:setName("title")
title:setTag(119)
title:setCascadeColorEnabled(true)
title:setCascadeOpacityEnabled(true)
title:setAnchorPoint(0.0000, 1.0000)
title:setPosition(154.0000, 120.9999)
title:setTextColor({r = 38, g = 47, b = 42})
layout = ccui.LayoutComponent:bindLayoutComponent(title)
layout:setPositionPercentX(0.1618)
layout:setPositionPercentY(0.8643)
layout:setPercentWidth(0.2826)
layout:setPercentHeight(0.3643)
layout:setSize({width = 269.0000, height = 51.0000})
layout:setLeftMargin(154.0000)
layout:setRightMargin(529.0000)
layout:setTopMargin(19.0001)
layout:setBottomMargin(69.9999)
ImageD:addChild(title)

--Create content
local content = ccui.Text:create()
content:ignoreContentAdaptWithSize(false)
content:setFontName("FZZhengHeiS-B-GB.ttf")
content:setFontSize(30)
content:setString([[]])
content:setLayoutComponentEnabled(true)
content:setName("content")
content:setTag(120)
content:setCascadeColorEnabled(true)
content:setCascadeOpacityEnabled(true)
content:setAnchorPoint(0.0000, 1.0000)
content:setPosition(144.9996, 61.0005)
content:setTextColor({r = 126, g = 110, b = 68})
layout = ccui.LayoutComponent:bindLayoutComponent(content)
layout:setPositionPercentX(0.1523)
layout:setPositionPercentY(0.4357)
layout:setPercentWidth(0.7668)
layout:setPercentHeight(0.2143)
layout:setSize({width = 730.0000, height = 30.0000})
layout:setLeftMargin(144.9996)
layout:setRightMargin(77.0004)
layout:setTopMargin(78.9995)
layout:setBottomMargin(31.0005)
ImageD:addChild(content)

--Create Image_open
local Image_open = ccui.ImageView:create()
Image_open:ignoreContentAdaptWithSize(false)
cc.SpriteFrameCache:getInstance():addSpriteFrames("hall/email/email_plist.plist")
Image_open:loadTexture("email_open.png",1)
Image_open:setLayoutComponentEnabled(true)
Image_open:setName("Image_open")
Image_open:setTag(121)
Image_open:setCascadeColorEnabled(true)
Image_open:setCascadeOpacityEnabled(true)
Image_open:setAnchorPoint(0.0000, 0.0000)
Image_open:setPosition(893.8000, 29.9321)
layout = ccui.LayoutComponent:bindLayoutComponent(Image_open)
layout:setPositionPercentX(0.9389)
layout:setPositionPercentY(0.2138)
layout:setPercentWidth(0.0179)
layout:setPercentHeight(0.1000)
layout:setSize({width = 17.0000, height = 14.0000})
layout:setLeftMargin(893.8000)
layout:setRightMargin(41.2000)
layout:setTopMargin(96.0679)
layout:setBottomMargin(29.9321)
ImageD:addChild(Image_open)

--Create Animation
result['animation'] = ccs.ActionTimeline:create()
  
result['animation']:setDuration(0)
result['animation']:setTimeSpeed(1.0000)
--Create Animation List

result['root'] = Node
return result;
end

return Result

